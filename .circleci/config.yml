version: 2
jobs:
  py3test:
    working_directory: ~/atomate
    docker:
      - image: materialsvirtuallab/circle-ci-pmg-py3:0.0.2
      - image: circleci/mongo:3.4.15
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            mkdir coverage_reports
            apt-get -y -qq update
            apt-get -y -qq install gfortran python-openbabel python-vtk python3-tk
            pip install numpy
            pip install -r requirements.txt
            pip install -r requirements-optional.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          command: |
            . venv/bin/activate
            python3 setup.py develop
            ls
            echo "PATH=$PATH"
            nosetests --config=nose.cfg --cover-html --cover-html-dir=coverage_reports
      - store_artifacts:
          path: coverage_reports/
          destination: tr1
      - store_test_results:
          path: coverage_reports/

  py2test:
    working_directory: ~/atomate
    docker:
      - image: materialsvirtuallab/circle-ci-pmg-py2:0.0.2
      - image: circleci/mongo:3.4.15

    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          command: |
            pip install virtualenv
            virtualenv venv
            . venv/bin/activate
            apt-get -y -qq update
            apt-get -y -qq install gfortran python-openbabel python-vtk python3-tk
            pip install numpy
            pip install -r requirements.txt
            pip install -r requirements-optional.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          command: |
            . venv/bin/activate
            python setup.py develop
            ls
            echo "PATH=$PATH"
            nosetests --config=nose.cfg

workflows:
  version: 2
  build_and_test:
    jobs:
      - py3test
      - py2test
